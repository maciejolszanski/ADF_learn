{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "azureDFmol"
		},
		"AzureDatabricksLinkedService_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksLinkedService'"
		},
		"AzureStorageLinkedService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureStorageLinkedService'"
		},
		"DeltaLakeLinkedService_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'DeltaLakeLinkedService'"
		},
		"AzureDatabricksLinkedService_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0831-104038-88q0a2qf"
		},
		"AzureStorageLinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adfmolstorage.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_dataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"codes": {},
									"delays": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_db')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy codes",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureDatabricksDeltaLakeSink",
								"importSettings": {
									"type": "AzureDatabricksDeltaLakeImportCommand"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "codes_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "deltaLake_codes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy delays",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureDatabricksDeltaLakeSink",
								"importSettings": {
									"type": "AzureDatabricksDeltaLakeImportCommand"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "delays_raw",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "deltaLake_delays",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "join",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy delays",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy codes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/olszanskimaciej@wp.pl/adf_pipeline"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksLinkedService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "If Condition1",
						"description": "",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('Lookup1').output,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"exportSettings": {
												"type": "AzureDatabricksDeltaLakeExportCommand"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "deltaLake_avgDelays",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "outputTable_csv",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "join",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": "SELECT COUNT(*) FROM codes"
							},
							"dataset": {
								"referenceName": "deltaLake_delays",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/codes_raw')]",
				"[concat(variables('factoryId'), '/datasets/deltaLake_codes')]",
				"[concat(variables('factoryId'), '/datasets/delays_raw')]",
				"[concat(variables('factoryId'), '/datasets/deltaLake_delays')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]",
				"[concat(variables('factoryId'), '/datasets/deltaLake_avgDelays')]",
				"[concat(variables('factoryId'), '/datasets/outputTable_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "test",
						"fileSystem": "data"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/codes_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "rawData/codes",
						"fileSystem": "data"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "City",
						"type": "UTF8"
					},
					{
						"name": "State",
						"type": "UTF8"
					},
					{
						"name": "Country",
						"type": "UTF8"
					},
					{
						"name": "IATA",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/delays_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "rawData/delays",
						"fileSystem": "data"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "date",
						"type": "INT32"
					},
					{
						"name": "delay",
						"type": "INT32"
					},
					{
						"name": "distance",
						"type": "INT32"
					},
					{
						"name": "origin",
						"type": "UTF8"
					},
					{
						"name": "destination",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/deltaLake_avgDelays')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DeltaLakeLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": "flights",
					"table": "avg_delays"
				},
				"schema": [
					{
						"name": "State",
						"type": "string"
					},
					{
						"name": "AverageDelay",
						"type": "double"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DeltaLakeLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/deltaLake_codes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DeltaLakeLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": "flights",
					"table": "codes"
				},
				"schema": [
					{
						"name": "City",
						"type": "string"
					},
					{
						"name": "State",
						"type": "string"
					},
					{
						"name": "Country",
						"type": "string"
					},
					{
						"name": "IATA",
						"type": "string"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DeltaLakeLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/deltaLake_delays')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DeltaLakeLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": "flights",
					"table": "delays"
				},
				"schema": [
					{
						"name": "Date",
						"type": "integer"
					},
					{
						"name": "Delay",
						"type": "integer"
					},
					{
						"name": "Distance",
						"type": "integer"
					},
					{
						"name": "Origin",
						"type": "string"
					},
					{
						"name": "Destination",
						"type": "string"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DeltaLakeLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outputTable_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "outputData",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outputTable_csv_DATAFLOW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "outputData/",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3279500436610823.3.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksLinkedService_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricksLinkedService_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureStorageLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureStorageLinkedService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureStorageLinkedService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeltaLakeLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-3279500436610823.3.azuredatabricks.net",
					"clusterId": "0831-104038-88q0a2qf",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('DeltaLakeLinkedService_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "codes_raw",
								"type": "DatasetReference"
							},
							"name": "codes"
						},
						{
							"dataset": {
								"referenceName": "delays_raw",
								"type": "DatasetReference"
							},
							"name": "delays"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outputTable_csv_DATAFLOW",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          City as string,",
						"          State as string,",
						"          Country as string,",
						"          IATA as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet',",
						"     partitionBy('hash', 1)) ~> codes",
						"source(output(",
						"          date as integer,",
						"          delay as integer,",
						"          distance as integer,",
						"          origin as string,",
						"          destination as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet',",
						"     partitionBy('hash', 1)) ~> delays",
						"codes, delays join(IATA == origin,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     partitionBy('hash', 1),",
						"     broadcast: 'auto')~> join1",
						"join1 aggregate(groupBy(State),",
						"     avgDelays = avg(delay)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/codes_raw')]",
				"[concat(variables('factoryId'), '/datasets/delays_raw')]",
				"[concat(variables('factoryId'), '/datasets/outputTable_csv_DATAFLOW')]"
			]
		}
	]
}